#############
#  general  #
#############

set -g base-index 1

###########
#  theme  #
###########

# color style
# - default: green
# - copy mode: blue(color39)
# - prefix mode: yellow
tmux_color="#{?client_prefix,yellow,#{?pane_in_mode,color39,green}}"
# `reverse` means set tmux_color as background color
tmux_style="#[default,fg=${tmux_color},reverse]"

tmux_host="#{host}"
tmux_mode="#{?pane_in_mode,copy,#{client_key_table}}"
# window flags meaning. details in `man tmux`
# - *         Denotes the current window.
# - -         Marks the last window (previously selected).
# - #         Window activity is monitored and activity has been detected.
# - !         Window bells are monitored and a bell has occurred in the window.
# - ~         The window has been silent for the monitor-silence interval.
# - M         The window contains the marked pane.
# - Z         The window's active pane is zoomed.
tmux_window="#{window_index}:#{window_name}#{?window_flags,#{window_flags},}"

set -g status-style "none"
set -g status-left "${tmux_style} #{session_name} "
set -g window-status-format " ${tmux_window}"
set -g window-status-current-format " ${tmux_style}${tmux_window}"
set -g status-right "${tmux_style} ${tmux_mode} #[default] %H:%M %b-%d-%y ${tmux_host}"

# if the number of panes is more than 1, the pane border text
# otherwise not show pane border text
# - -b: run in the background
set-hook -g "window-layout-changed" {
  if -b "[ '#{window_panes}' -gt 1 ]" \
    "set pane-border-status top" "set pane-border-status off"
}

# clear environment variables
setenv -gu tmux_color
setenv -gu tmux_style
setenv -gu tmux_host
setenv -gu tmux_mode
setenv -gu tmux_window

#################
#  keybindings  #
#################

# prefix
set -g prefix C-q
unbind -a -T prefix
bind C-q send-prefix

# vi bindings
set -g mode-keys vi

#################
#  prefix mode  #
#################

bind k select-pane -U \; switch-client -T prefix
bind j select-pane -D \; switch-client -T prefix
bind h select-pane -L \; switch-client -T prefix
bind l select-pane -R \; switch-client -T prefix
bind C-n new-window -c '#{pane_current_path}' \; switch-client -T prefix
bind g switch-client -T g
bind G display-panes \; switch-client -T prefix
bind C-w switch-client -T ctrl-w
bind -N "Enter copy mode" v copy-mode
bind Z switch-client -T Z
bind Any switch-client -T prefix

###############
#  copy mode  #
###############
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi C-l list-keys -aT copy-mode-vi
bind -T copy-mode-vi / command-prompt -i -p "(search up)" \
  -I"#{pane_search_string}" "send -X search-backward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "(search down)" \
  -I"#{pane_search_string}" "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi C-v send -X begin-selection \;\
  send -X rectangle-toggle

############
#  g mode  #
############

bind -T g t next-window \; switch-client -T prefix
bind -T g T previous-window \; switch-client -T prefix 
bind -T g Any switch-client -T prefix

############
#  Z mode  #
############

bind -T Z C choose-client -Z
bind -T Z Q suspend-client
bind -T Z Z detach-client
bind -T Z Any switch-client -T prefix

#################
#  ctrl-w mode  #
#################
bind -T ctrl-w s split-window -v -c '#{pane_current_path}' \;\
  switch-client -T prefix
bind -T ctrl-w v split-window -h -c '#{pane_current_path}' \;\
  switch-client -T prefix
bind -T ctrl-w -N "Panes are spread out as evenly in both rows and columns" \
  t select-layout tiled \; switch-client -T prefix
bind -T ctrl-w -N "Spread the current pane and any panes next to it out evenly" \
  = select-layout -E \; switch-client -T prefix
bind -T ctrl-w Any switch-client -T prefix
