#!/bin/bash

link_file() {
  local dotfile_name=$1

  # TODO: validate $dotfile_name
  [[ ! -e "${HOME_DIR}/${dotfile_name}" ]] && error_setup_skip "${dotfile_name}" "Not in ${HOME_DIR}" && return

  pushd ~ >/dev/null
  # ln -s /path/to/dotfiles/home/.dotfile .dotfile
  ! ln -fns "${HOME_DIR}/${dotfile_name}" "${dotfile_name}" \
    && error_setup_skip "${dotfile_name}" "failed to link" \
    && popd >/dev/null && return # TODO: pass error message
  popd >/dev/null

  success_setup "${dotfile_name}"
}

install_fzf() {
  pushd ~ >/dev/null

  # TODO: switch options according to shell
  ! .fzf/install --all --no-bash --no-fish 2>&1 >/dev/null \
    && error_setup_skip "fzf" "failed to install" \
    && popd >/dev/null && return # TODO: pass error message

  # remove last sentence '[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh'
  local rcfile="${HOME_DIR}/.zshrc"
  perl -ni -e 'print unless /\[ \-f \~\/\.fzf\.zsh \] && source \~\/\.fzf\.zsh/' $rcfile
   [[ -z $(tail -1 $rcfile) ]] && perl -ni -e 'print unless eof' $rcfile

  popd >/dev/null
  success_setup ".fzf"
}

install_nvm() {
  local nvmdir="$HOME_DIR/.nvm"
  pushd $nvmdir >/dev/null

  git fetch --tags origin
  git checkout --quiet \
    `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`

  source "$nvmdir/nvm.sh"

  if ! command -v nvm >/dev/null; then
    error_setup_skip "nvm" "failed to install"
    popd >/dev/null && return
  fi

  popd >/dev/null
  success_setup ".nvm"
}

install_vim_plug() {
  pushd ~ >/dev/null

  vim -es -u ./vim/vimrc -i NONE -c "PlugInstall" -c "qa"

  popd >/dev/null
  success_setup "vim-plug"
}

error_exit() {
  printf '%s\n' "$1" >&2
  exit "${2:-1}"
}

success_setup() {
  echo "[$(tput -Tscreen-256color setaf 2)OK$(tput -Tscreen-256color sgr0)] $1"
}

error_setup_skip() {
  echo "[$(tput -Tscreen-256color setaf 1)NG$(tput -Tscreen-256color sgr0)] $1 ($2)"
}
